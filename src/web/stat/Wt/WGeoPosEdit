#ifndef WGEOPOSEDIT_INCLUDED
#define WGEOPOSEDIT_INCLUDED

#include <Wt/WCompositeWidget>
#include <Wt/WGoogleMap>
#include <Wt/WSignal>
#include <utility>

namespace Wt
{
// forward declarations
class WContainerWidget;
class WComboBox;
class WImage;
namespace Ext
{
    class ComboBox;
    class NumberField;
    class LineEdit;
    class Dialog;
}

class WGeoPosEdit : public Wt::WCompositeWidget
{
public:
    //local types
    enum PositionFormat
    {
        WGS84_SEC,
        WGS84_MIN,
        WGS84_DEC,
        WGS84_UTM,
        SWISSGRID
    };
public:
    WGeoPosEdit(Wt::WContainerWidget *parent = 0, PositionFormat fmt = WGS84_SEC);

    void setPos(std::pair<double, double> pos);
    std::pair<double, double> pos() const;

    static std::string format(std::pair<double, double> pos, PositionFormat fmt = WGS84_SEC);

    Wt::Signal<void>& changed() { return changed_; }

private:
    void showMap();
    void setPosFromDlg(WGoogleMap::Coordinate pos);
    void closeDlg();
    void keyUp(const Wt::WKeyEvent &kev);

    PositionFormat       format_;
    Wt::WContainerWidget *impl_;
    Wt::Ext::ComboBox    *cbNoSo_;
    Wt::Ext::NumberField *nfLatDeg_;
    Wt::Ext::NumberField *nfLatMin_;
    Wt::Ext::NumberField *nfLatSec_;
    Wt::Ext::ComboBox    *cbEaWe_;
    Wt::Ext::NumberField *nfLonDeg_;
    Wt::Ext::NumberField *nfLonMin_;
    Wt::Ext::NumberField *nfLonSec_;
    Wt::Ext::LineEdit    *leZone_;
    Wt::Ext::NumberField *nfGridX_;
    Wt::Ext::NumberField *nfGridY_;
    Wt::WImage           *mapIcon_;
    Wt::Ext::Dialog      *mapDlg_;

    Wt::Signal<void>     changed_;
};

} // namespace Wt

#endif // WGEOPOSEDIT_INCLUDED
