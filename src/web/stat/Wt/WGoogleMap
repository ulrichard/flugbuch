#ifndef WGOOGLEMAP_H_INCLUDED
#define WGOOGLEMAP_H_INCLUDED

// witty
#include <Wt/WContainerWidget>
// standard library
#include <vector>
#include <utility>
#include <string>

namespace Wt
{
// forward declarations
class WColor;

/*! \class WGoogleMap Wt/WGoogleMap Wt/WGoogleMap
 *  \brief A widget that displays a google map.
 *
 */
class WGoogleMap : public WContainerWidget
{
public:
    /*! \brief Create a map widget with optional parent.
     */
    WGoogleMap(WContainerWidget *parent = 0);

    /*! \brief Destruct a %WGoogleMap
     */
    virtual ~WGoogleMap() { }

    virtual void refresh();

    /*! \brief Add a marker overlay to the map.
     */
    void addMarker(const std::pair<double, double> &pos);

    /*! \brief Add a polyline overlay to the map.
     *
     *  specify a vaue between 0.0 and 1.0 for the opacity.
     */
    void addPolyline(const std::vector<std::pair<double, double> > &points,
                     const std::string &color = "#FF0000", int width = 2, double opacity = 1.0);

    /*! \brief Zoom the map to a region defined by a bounding box of lat/lon coordinates.
     */
    void zoomWindow(std::pair<std::pair<double, double>, std::pair<double, double> > bbox);

protected:
    virtual void prepareRerender();

private:
    bool rendered_;
    std::vector<std::string> additions_;
};


} //  namespace Wt

#endif // WGOOGLEMAP_H_INCLUDED
